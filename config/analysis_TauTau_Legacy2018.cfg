[general]

lumi = 59970 # pb^-1
#Run2017B
#lumi = 4823 #pb^-1
#Run2017F
#lumi = 13540 #pb^-1
outputFolder = /home/llr/cms/motta/CMSSW_10_2_16/src/KLUBAnalysis/test_analysis



data        = DTauA, DTauB, DTauC, DTauD

signals =  GGFSM

backgrounds = TTfullyHad, TTfullyLep, TTsemiLep, DY, WJets_HT_0_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf, TWtop, TWantitop, singleTop_antitop, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, EWKZ2Jets_ZToNuNu, WW, WZ, ZZ, ZH_HBB_ZLL, ZH_HTauTau, ggHTauTau, VBFHTauTau, WplusHTauTau, WminusHTauTau, ttHJetTononBB, ttHJetToBB, WWW, WWZ, WZZ, TTWJetsToLNu, TTWJetsToQQ, TTWW

variables = BDToutSM_kl_1
#, BDToutSM_kl_1_tauup, BDToutSM_kl_1_taudown, BDToutSM_kl_1_jetup, BDToutSM_kl_1_jetdown

selections = s1b1jresolvedMcut, s2b0jresolvedMcut, sboostedLLMcut , VBFtight, VBFloose

regions    = SR, SStight, SSrlx, OSinviso, SSinviso


[configs]
sampleCfg = config/sampleCfg_Legacy2018.cfg
cutCfg    = config/selectionCfg_TauTau_lambdaScan.cfg


[merge]
TT        = TTfullyHad, TTsemiLep, TTfullyLep
WJets     = WJets_HT_0_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf
EWK     = EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, EWKZ2Jets_ZToNuNu
singleT = TWtop, TWantitop, singleTop_antitop
VH = ZH_HBB_ZLL, ZH_HTauTau, WplusHTauTau, WminusHTauTau
ttH = ttHJetTononBB, ttHJetToBB
doubleTsingleV     = TTWJetsToLNu, TTWJetsToQQ
doubleTVV    = TTWW
doubleV      = WW, WZ, ZZ
tripleV     = WWW, WWZ, WZZ


data_obs  = DTauB, DTauC, DTauD, DTauA


############################################################################################
############################################################################################
# the following lines are used for postprocessing (pp_), i.e. not read from AnalysisHelper
# but used in subsequent steps of the analysis to combine histos, compute QCD etc..
# we keep them here to have everything at hand

[pp_merge]


## in case some histos must be rebinned. Pass as
## uniqueid = varToRebin , condition, newBinning
# [pp_rebin]
# r1 = HHKin_mass_raw         , sboostedLLMcut , 250, 1000 # a unique, big bin
# r2 = HHKin_mass_raw_tauup   , sboostedLLMcut , 250, 1000 # a unique, big bin
# r3 = HHKin_mass_raw_taudown , sboostedLLMcut , 250, 1000 # a unique, big bin
# r4 = HHKin_mass_raw_jetup   , sboostedLLMcut , 250, 1000 # a unique, big bin
# r5 = HHKin_mass_raw_jetdown , sboostedLLMcut , 250, 1000 # a unique, big bin
#
# r6  = MT2         , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r7  = MT2_tauup   , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r8  = MT2_taudown , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r9  = MT2_jetup   , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r10 = MT2_jetdown , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal

## parameters for QCD evaluation
## doFitIf : condition to be respected to make rlx-to-tight QCD fit. It is used as eval(doFitIf). Use names sel, var


[pp_QCD]
QCDname      = QCD
SR           = SR
yieldSB      = SStight
shapeSB      = SSrlx
SBtoSRfactor = 1
regionD = SSinviso
regionC = OSinviso
doFitIf      = False
fitFunc      = [0] + [1]*x


#for inverted QCD
#QCDname      = QCD
#SR           = SR
#yieldSB      = OSinviso
#shapeSB      = OSinviso
#SBtoSRfactor = 1
#doFitIf      = False
#fitFunc      = [0] + [1]*x
#regionC      = SStight
#regionD      = SSinviso

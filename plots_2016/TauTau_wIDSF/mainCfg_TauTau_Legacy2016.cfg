[general]

lumi = 35922 # pb^-1 CMS2018LUMI PASSING ANALYSIS QUALITY REQUIREMENT
# the lumi in fb^-1 is used only by the plotting program
# approximate to only one decimal digit
lumi_fb = 35.9 # fb^-1

outputFolder = /home/llr/cms/motta/CMSSW_10_2_16/src/KLUBAnalysis/plots_2016/TauTau_wIDSF/

data = DTauB, DTauC, DTauD, DTauE, DTauF, DTauG, DTauH

signals =  GGHHSM

backgrounds = TTfullyHad, TTfullyLep, TTsemiLep, DY, DY_M_10_50, WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf, TWtop, TWantitop, singleTop_top, singleTop_antitop, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L, ZH_HBB_ZLL, ZH_HTauTau, ggHTauTau, VBFHTauTau, WplusHTauTau, WminusHTauTau, ttHJetTononBB, ttHJetToBB, WWW, WWZ, WZZ, ZZZ, TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu, TTWW, TTWZ, TTZZ

variables = dau1_pt, dau2_pt, dau1_eta, dau2_eta, bjet1_pt, bjet2_pt, tauH_mass, tauH_SVFIT_mass, ditau_deltaR, tauH_pt, bH_pt, bH_mass, HH_pt, HH_mass_raw

selections = baseline

regions    = SR, SStight, SSrlx, OSinviso, SSinviso


[configs]
sampleCfg = config/sampleCfg_Legacy2016.cfg
cutCfg    = config/selectionCfg_TauTau_Legacy2016.cfg


[merge]
# HERE THE MERGING OF THE BKGs IS DONE SO THAT WE CAN COMPUTE DURING THE PLOTTING ALSO THE YIELDS OF THE SIGLE PROCESSES INVOLVED
# IN ORDER TO HAVE THE SAME FINAL PLOTS AS FOR THE OTHER YEARS, WHEN PLOTTING THE MERGING IS FURTHER CARRIED OUT AS FOLLOWS:
# others = EWK + singleT + VH + singleT + VH + ttH + doubleTsingleV + doubleTVV + doubleV + tripleV + VBFHTauTau + ggHTauTau

TT        = TTfullyHad, TTfullyLep, TTsemiLep
WJets     = WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf
EWK     = EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL
singleT = TWtop, TWantitop, singleTop_top, singleTop_antitop
VH = ZH_HBB_ZLL, ZH_HTauTau, WplusHTauTau, WminusHTauTau
ttH = ttHJetTononBB, ttHJetToBB
doubleTsingleV     = TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu
doubleTVV    = TTWW, TTWZ, TTZZ
doubleV      = WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L
tripleV     = WWW, WWZ, WZZ, ZZZ
DY_lowMass = DY_M_10_50

data_obs  = DTauB, DTauC, DTauD, DTauE, DTauF, DTauG, DTauH


############################################################################################
## parameters for QCD evaluation
## doFitIf : condition to be respected to make rlx-to-tight QCD fit. It is used as eval(doFitIf). Use names sel, var


[pp_QCD]
#for normal QCD
#QCDname      = QCD
#SR           = SR
#yieldSB      = SStight
#shapeSB      = SSrlx
#SBtoSRfactor = 1
#regionD = SSinviso
#regionC = OSinviso
#doFitIf      = False
#fitFunc      = [0] + [1]*x


#for inverted QCD
QCDname      = QCD
SR           = SR
yieldSB      = OSinviso
shapeSB      = OSinviso
SBtoSRfactor = 1
doFitIf      = False
fitFunc      = [0] + [1]*x
regionC      = SStight
regionD      = SSinviso


[VBF_rew]
# !WARNING! The input samples MUST be in the order: node1, node2, node3, node4, node5, node19 !
# See the list 'inputSignals' to understand the link node<->couplings
doReweighting = False
inputSignals = VBFHH_CV_1_C2V_1_C3_1, VBFHH_CV_1_C2V_1_C3_0, VBFHH_CV_1_C2V_1_C3_2, VBFHH_CV_1_C2V_2_C3_1, VBFHH_CV_1_5_C2V_1_C3_1, VBFHH_CV_1_C2V_0_C3_2
target_kl  = 1
target_cv  = 0, 1
target_c2v = 1
target_xs = 1 #[pb]
